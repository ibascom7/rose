# Multi-stage build for production
FROM elixir:1.15-otp-26 as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js for asset compilation
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Create app directory
WORKDIR /app

# Install hex and rebar
RUN mix local.hex --force && \
    mix local.rebar --force

# Set environment to prod
ENV MIX_ENV=prod

# Copy dependency files
COPY mix.exs mix.lock ./

# Install dependencies
RUN mix deps.get --only=prod
RUN mix deps.compile

# Copy assets
COPY assets/package.json assets/package-lock.json* ./assets/
RUN cd assets && npm ci --only=production

# Copy application code
COPY . .

# Compile assets
RUN cd assets && npm run build
RUN mix assets.deploy

# Compile the application
RUN mix compile
RUN mix release

# Final stage - minimal runtime image
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    openssl \
    ncurses-bin \
    locales \
    ca-certificates \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set locale
RUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen
ENV LANG=en_US.UTF-8 \
    LANGUAGE=en_US:en \
    LC_ALL=en_US.UTF-8

# Create app user
RUN useradd --create-home app
WORKDIR /app
USER app

# Copy release from builder
COPY --from=builder --chown=app:app /app/_build/prod/rel/rose ./

# Expose port
EXPOSE 4000

# Start the release
CMD ["./bin/rose", "start"]